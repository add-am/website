[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Hi, Im Adam",
    "section": "",
    "text": "Hi, Im Adam\n\n This is a link"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "1 + 3\n\n[1] 4"
  },
  {
    "objectID": "hidden.html",
    "href": "hidden.html",
    "title": "Hidden",
    "section": "",
    "text": "1 + 3\n\n[1] 4"
  },
  {
    "objectID": "cv_placeholder.html",
    "href": "cv_placeholder.html",
    "title": "Curriculum vitae",
    "section": "",
    "text": "Download current CV\n  \n\n\n  \n\nabout"
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Projects",
    "section": "",
    "text": "My list of projects will go here"
  },
  {
    "objectID": "cv/CV.html",
    "href": "cv/CV.html",
    "title": "Adam Shand",
    "section": "",
    "text": "Education and Awards\n\n\nWarning: Detailed entry formatter is not defined for this output format.\n\n\n# A tibble: 2 × 5\n  what                         when                  with           where why   \n  <chr>                        <chr>                 <chr>          <chr> <list>\n1 BSc (Hons) in Marine Science Feb. 2020 - Nov. 2020 Griffith Univ… Gold… <list>\n2 BMarSc in Marine Ecology     Feb. 2017 - Nov. 2019 Griffith Univ… Gold… <list>\n\n\n\n\nQualifications\n\n\nWarning: Brief entry formatter is not defined for this output format.\n\n\n# A tibble: 10 × 3\n   what                                                           when  with    \n   <chr>                                                          <chr> <chr>   \n 1 HLTAID011 - Provide First Aid                                  2023  ABC Fir…\n 2 HLTAID010 - PRovide basic emergency life support               2023  ABC Fir…\n 3 HLTAID009 - Provide cardiopulmonary resuscitation              2023  ABC Fir…\n 4 Aquatic Environment Monitoring Skills                          2023  JCU, Tr…\n 5 Drone Pilot (RPA Operator Accreditation)                       2023  CASA    \n 6 Lifetime Member of the Golden Key International Honour Society 2018  Griffit…\n 7 Recreational Boat License                                      2017  DTMR, Q…\n 8 Advanced Open Water Diver                                      2016  PADI    \n 9 Certificate I in Maritime Operations (MAR10313)                2015  TAFE, N…\n10 Class C and Class RE Manual Drivers License                    2015  DTMR, Q…"
  },
  {
    "objectID": "cv/cv_signpost.html",
    "href": "cv/cv_signpost.html",
    "title": "Adam Shand Curriculum Vitae",
    "section": "",
    "text": "Download current CV"
  },
  {
    "objectID": "projects/projects.html",
    "href": "projects/projects.html",
    "title": "Projects",
    "section": "",
    "text": "Super Looooooooooooooooooooooong title\n\n\nsub title\n\n\nabstract\n\n\n\n\n\n\nOct 2, 2021\n\n\nAuthro\n\n\n\n\n\n\n\n\ntitle\n\n\nsub title\n\n\nabstract\n\n\n\n\n\n\nOct 2, 2021\n\n\nAuthro\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "projects/dt_fish.html",
    "href": "projects/dt_fish.html",
    "title": "Title 1",
    "section": "",
    "text": "1 Introduction\nThis is a simple script to produce a map of sampling locations for the Fish indicator category in the Freshwater environment for the Dry Tropics region.\n\n\n2 Script Set Up\nBelow we load the required packages for the script.\n\n\nCode\nlibrary(sf) \nlibrary(tmap)\nlibrary(glue)\nlibrary(here)\nlibrary(tidyverse)\nlibrary(dataaimsr)\n\n\nThen set the coordinate reference system and save location.\n\n\nCode\n#set crs\n#proj_crs <- params$project_crs\n\n#create a file path to help with saving things\n#save_path <- here(\"outputs/dt_fish/\")\n\n#bring that path to life\n#dir.create(here(save_path))\n\n#turn off S2 mapping\nsf_use_s2(FALSE)\n\n\n\n\n3 Load Data\nOnce our work space is set up we then need to bring in data to create the maps. The background/location data is our usual basin/region outline, however the key data for this analysis is the breakdown of streams that are impounded or not impounded. This data is provided by David Moffatt.\n\n\nCode\n##please note if the data is not in the basin builder folder, try running the basin builder script\n#dry_tropics <- st_read(here(\"data/n3_region-builder/n3_region.gpkg\")) |> st_transform(proj_crs) |> \n  #filter(environment != \"Marine\", region == \"Dry Tropics\")\n\n#read in qld outlines data from the gisaimsr package, filter for land and islands, update crs\n#qld <- get(data(\"gbr_feat\", package = \"gisaimsr\")) |> filter(FEAT_NAME %in% c(\"Mainland\", \"Island\")) |> \n  #st_transform(proj_crs)\n\n#read in the main dataset\n#fish_sample_sites <- st_read(here(\"data/dt_fish/fish_monitoring_sites.gpkg\")) |> st_transform(proj_crs)\n\n#read in the impounded waters - we will use this for our streams\n#impounded_waters <- st_read(here(\"data/dt_impoundment-length/impounded_and_not_impounded_waters.gpkg\")) |> st_transform(proj_crs)\n\n#create a townsville point coord\n#tsv <- st_as_sf(data.frame(place = \"Townsville\", x = \"-19.2590\", y = \"146.8169\"), coords = c(\"y\", \"x\"), crs = proj_crs)\n\n\n\n\n4 Maipulate Data\nBefore we can create the map we just need to manipulate the data bit to remove unnecessary visual clutter.\n\n\nCode\n#rather than trying to move each site we will just do a randomized jitter and re run the script if it doesn't look good.\n#labels <- st_jitter(fish_sample_sites, 0.02)\n\n\n\n\n5 Create Map\nAnd finally we can produce the required maps to be used in our technical report style.\n\n\nCode\n#create a map of the area\n#map <- tm_shape(qld) +\n  #tm_polygons(col = \"grey80\", border.col = \"black\") +\n  #tm_shape(dry_tropics) +\n  #tm_polygons(border.col = \"black\") +\n  #tm_shape(impounded_waters, is.master = T) +\n  #tm_lines(lwd = 0.5, col = \"blue\", alpha = 0.5) +\n  #tm_shape(fish_sample_sites, is.master = T) +\n  #tm_symbols(shape = 21, border.col = \"Black\", col = \"short_name\", size = 0.5, palette = \"Set3\") +\n  #tm_text(\"waterway\", size = 0.65, auto.placement = T, shadow = T) +\n  #tm_shape(tsv) +\n  #tm_symbols(size = 0.5, col = \"white\", border.col = \"black\", border.lwd = 2, shape = 23) +\n  #tm_text(\"place\", shadow = T, xmod = -2.5, ymod = 0.1) +\n  #tm_add_legend(type = \"line\", col = \"blue\", labels = \"Watercourses\")  +\n  #tm_layout(legend.frame = T, legend.bg.color = \"White\", asp = 1.1, \n  #          legend.text.size = 0.7, legend.position = c(\"left\", \"bottom\")) +\n  #tm_scale_bar(width = 0.15, text.size = 0.7, position = c(0.23, 0)) +\n  #tm_compass(position = c(\"right\", \"top\"))\n\n#save the map as a png\n#tmap_save(map, filename = glue(\"{save_path}/fish-sampling-locations.png\"))\n\n\nScript complete :) Below is an interactive example of the maps created.\n\n\nCode\n#tmap_mode(\"view\")\n\n#map\n\n\n\n\n6 Session Info\nBelow is the session info at the time of rendering this script. Of greatest importance is to note the R version, and the “other attached packages” as these are the most significant drivers of success/failure. It is also good to check the “attached base packages” and “loaded via a namespace” packages as well. To check your session info use sessionInfo().\n\n\nCode\nsessionInfo()\n\n\nR version 4.3.1 (2023-06-16 ucrt)\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\nRunning under: Windows 10 x64 (build 19045)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_Australia.utf8  LC_CTYPE=English_Australia.utf8   \n[3] LC_MONETARY=English_Australia.utf8 LC_NUMERIC=C                      \n[5] LC_TIME=English_Australia.utf8    \n\ntime zone: Australia/Brisbane\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] dataaimsr_1.1.0 lubridate_1.9.2 forcats_1.0.0   stringr_1.5.0  \n [5] dplyr_1.1.3     purrr_1.0.2     readr_2.1.4     tidyr_1.3.0    \n [9] tibble_3.2.1    ggplot2_3.4.3   tidyverse_2.0.0 here_1.0.1     \n[13] glue_1.6.2      tmap_3.3-3      sf_1.0-14      \n\nloaded via a namespace (and not attached):\n [1] gtable_0.3.4        xfun_0.40           raster_3.6-23      \n [4] htmlwidgets_1.6.2   ggrepel_0.9.3       lattice_0.21-8     \n [7] tzdb_0.4.0          vctrs_0.6.3         tools_4.3.1        \n[10] crosstalk_1.2.0     generics_0.1.3      curl_5.0.2         \n[13] parallel_4.3.1      proxy_0.4-27        fansi_1.0.4        \n[16] pkgconfig_2.0.3     KernSmooth_2.23-21  RColorBrewer_1.1-3 \n[19] leaflet_2.2.0       lifecycle_1.0.3     compiler_4.3.1     \n[22] munsell_0.5.0       terra_1.7-39        codetools_0.2-19   \n[25] leafsync_0.1.0      stars_0.6-3         htmltools_0.5.6    \n[28] class_7.3-22        yaml_2.3.7          pillar_1.9.0       \n[31] classInt_0.4-9      lwgeom_0.2-13       abind_1.4-5        \n[34] tidyselect_1.2.0    digest_0.6.33       stringi_1.7.12     \n[37] rnaturalearth_0.3.4 rprojroot_2.0.3     fastmap_1.1.1      \n[40] grid_4.3.1          colorspace_2.1-0    cli_3.6.1          \n[43] magrittr_2.0.3      base64enc_0.1-3     dichromat_2.0-0.1  \n[46] XML_3.99-0.14       utf8_1.2.3          leafem_0.2.0       \n[49] e1071_1.7-13        withr_2.5.0         scales_1.2.1       \n[52] sp_2.0-0            timechange_0.2.0    httr_1.4.7         \n[55] rmarkdown_2.25      png_0.1-8           hms_1.1.3          \n[58] parsedate_1.3.1     evaluate_0.21       knitr_1.44         \n[61] tmaptools_3.1-1     viridisLite_0.4.2   rlang_1.1.1        \n[64] Rcpp_1.0.11         DBI_1.1.3           rstudioapi_0.15.0  \n[67] jsonlite_1.8.7      R6_2.5.1            units_0.8-3"
  },
  {
    "objectID": "projects/dt_fish_1.html",
    "href": "projects/dt_fish_1.html",
    "title": "title",
    "section": "",
    "text": "Introduction\nThis is a simple script to produce a map of sampling locations for the Fish indicator category in the Freshwater environment for the Dry Tropics region.\n\n\nScript Set Up\nBelow we load the required packages for the script.\n\n\nCode\nlibrary(sf) \nlibrary(tmap)\nlibrary(glue)\nlibrary(here)\nlibrary(tidyverse)\nlibrary(dataaimsr)\n\n\nThen set the coordinate reference system and save location.\n\n\nCode\n#set crs\n#proj_crs <- params$project_crs\n\n#create a file path to help with saving things\n#save_path <- here(\"outputs/dt_fish/\")\n\n#bring that path to life\n#dir.create(here(save_path))\n\n#turn off S2 mapping\nsf_use_s2(FALSE)\n\n\n\n\nLoad Data\nOnce our work space is set up we then need to bring in data to create the maps. The background/location data is our usual basin/region outline, however the key data for this analysis is the breakdown of streams that are impounded or not impounded. This data is provided by David Moffatt.\n\n\nCode\n##please note if the data is not in the basin builder folder, try running the basin builder script\n#dry_tropics <- st_read(here(\"data/n3_region-builder/n3_region.gpkg\")) |> st_transform(proj_crs) |> \n  #filter(environment != \"Marine\", region == \"Dry Tropics\")\n\n#read in qld outlines data from the gisaimsr package, filter for land and islands, update crs\n#qld <- get(data(\"gbr_feat\", package = \"gisaimsr\")) |> filter(FEAT_NAME %in% c(\"Mainland\", \"Island\")) |> \n  #st_transform(proj_crs)\n\n#read in the main dataset\n#fish_sample_sites <- st_read(here(\"data/dt_fish/fish_monitoring_sites.gpkg\")) |> st_transform(proj_crs)\n\n#read in the impounded waters - we will use this for our streams\n#impounded_waters <- st_read(here(\"data/dt_impoundment-length/impounded_and_not_impounded_waters.gpkg\")) |> st_transform(proj_crs)\n\n#create a townsville point coord\n#tsv <- st_as_sf(data.frame(place = \"Townsville\", x = \"-19.2590\", y = \"146.8169\"), coords = c(\"y\", \"x\"), crs = proj_crs)\n\n\n\n\nMaipulate Data\nBefore we can create the map we just need to manipulate the data bit to remove unnecessary visual clutter.\n\n\nCode\n#rather than trying to move each site we will just do a randomized jitter and re run the script if it doesn't look good.\n#labels <- st_jitter(fish_sample_sites, 0.02)\n\n\n\n\nCreate Map\nAnd finally we can produce the required maps to be used in our technical report style.\n\n\nCode\n#create a map of the area\n#map <- tm_shape(qld) +\n  #tm_polygons(col = \"grey80\", border.col = \"black\") +\n  #tm_shape(dry_tropics) +\n  #tm_polygons(border.col = \"black\") +\n  #tm_shape(impounded_waters, is.master = T) +\n  #tm_lines(lwd = 0.5, col = \"blue\", alpha = 0.5) +\n  #tm_shape(fish_sample_sites, is.master = T) +\n  #tm_symbols(shape = 21, border.col = \"Black\", col = \"short_name\", size = 0.5, palette = \"Set3\") +\n  #tm_text(\"waterway\", size = 0.65, auto.placement = T, shadow = T) +\n  #tm_shape(tsv) +\n  #tm_symbols(size = 0.5, col = \"white\", border.col = \"black\", border.lwd = 2, shape = 23) +\n  #tm_text(\"place\", shadow = T, xmod = -2.5, ymod = 0.1) +\n  #tm_add_legend(type = \"line\", col = \"blue\", labels = \"Watercourses\")  +\n  #tm_layout(legend.frame = T, legend.bg.color = \"White\", asp = 1.1, \n  #          legend.text.size = 0.7, legend.position = c(\"left\", \"bottom\")) +\n  #tm_scale_bar(width = 0.15, text.size = 0.7, position = c(0.23, 0)) +\n  #tm_compass(position = c(\"right\", \"top\"))\n\n#save the map as a png\n#tmap_save(map, filename = glue(\"{save_path}/fish-sampling-locations.png\"))\n\n\nScript complete :) Below is an interactive example of the maps created.\n\n\nCode\n#tmap_mode(\"view\")\n\n#map\n\n\n\n\nSession Info\nBelow is the session info at the time of rendering this script. Of greatest importance is to note the R version, and the “other attached packages” as these are the most significant drivers of success/failure. It is also good to check the “attached base packages” and “loaded via a namespace” packages as well. To check your session info use sessionInfo().\n\n\nCode\nsessionInfo()\n\n\nR version 4.3.1 (2023-06-16 ucrt)\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\nRunning under: Windows 10 x64 (build 19045)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_Australia.utf8  LC_CTYPE=English_Australia.utf8   \n[3] LC_MONETARY=English_Australia.utf8 LC_NUMERIC=C                      \n[5] LC_TIME=English_Australia.utf8    \n\ntime zone: Australia/Brisbane\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] dataaimsr_1.1.0 lubridate_1.9.2 forcats_1.0.0   stringr_1.5.0  \n [5] dplyr_1.1.3     purrr_1.0.2     readr_2.1.4     tidyr_1.3.0    \n [9] tibble_3.2.1    ggplot2_3.4.3   tidyverse_2.0.0 here_1.0.1     \n[13] glue_1.6.2      tmap_3.3-3      sf_1.0-14      \n\nloaded via a namespace (and not attached):\n [1] gtable_0.3.4        xfun_0.40           raster_3.6-23      \n [4] htmlwidgets_1.6.2   ggrepel_0.9.3       lattice_0.21-8     \n [7] tzdb_0.4.0          vctrs_0.6.3         tools_4.3.1        \n[10] crosstalk_1.2.0     generics_0.1.3      curl_5.0.2         \n[13] parallel_4.3.1      proxy_0.4-27        fansi_1.0.4        \n[16] pkgconfig_2.0.3     KernSmooth_2.23-21  RColorBrewer_1.1-3 \n[19] leaflet_2.2.0       lifecycle_1.0.3     compiler_4.3.1     \n[22] munsell_0.5.0       terra_1.7-39        codetools_0.2-19   \n[25] leafsync_0.1.0      stars_0.6-3         htmltools_0.5.6    \n[28] class_7.3-22        yaml_2.3.7          pillar_1.9.0       \n[31] classInt_0.4-9      lwgeom_0.2-13       abind_1.4-5        \n[34] tidyselect_1.2.0    digest_0.6.33       stringi_1.7.12     \n[37] rnaturalearth_0.3.4 rprojroot_2.0.3     fastmap_1.1.1      \n[40] grid_4.3.1          colorspace_2.1-0    cli_3.6.1          \n[43] magrittr_2.0.3      base64enc_0.1-3     dichromat_2.0-0.1  \n[46] XML_3.99-0.14       utf8_1.2.3          leafem_0.2.0       \n[49] e1071_1.7-13        withr_2.5.0         scales_1.2.1       \n[52] sp_2.0-0            timechange_0.2.0    httr_1.4.7         \n[55] rmarkdown_2.25      png_0.1-8           hms_1.1.3          \n[58] parsedate_1.3.1     evaluate_0.21       knitr_1.44         \n[61] tmaptools_3.1-1     viridisLite_0.4.2   rlang_1.1.1        \n[64] Rcpp_1.0.11         DBI_1.1.3           rstudioapi_0.15.0  \n[67] jsonlite_1.8.7      R6_2.5.1            units_0.8-3"
  },
  {
    "objectID": "cv/index.html",
    "href": "cv/index.html",
    "title": "ADAM SHAND",
    "section": "",
    "text": "Download Current CV"
  },
  {
    "objectID": "projects/index.html",
    "href": "projects/index.html",
    "title": "Projects",
    "section": "",
    "text": "StoryMap: Corals of Cleveland Bay\n\n\nSupervisor, Author and Maintainer\n\n\nA story about the hidden coral world in Cleveland Bay.\n\n\n\n\n\n\nMar 1, 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntitle\n\n\nsub title\n\n\nabstract\n\n\n\n\n\n\nOct 2, 2021\n\n\nAuthro\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNorthern Three Spatial Analyses (Freshwater: Fish Sampling Sites)\n\n\nsub title\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nAdam Shand\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStoryMap: Hydrology and Hydrodynamics of Cleveland Bay\n\n\nAuthor and Maintainer\n\n\nA story about water and sediment movement in Cleveland Bay.\n\n\n\n\n\n\nNov 13, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStoryMap: Guardians of the Bay\n\n\nMaintainer\n\n\nA story about the importance of seagrass in Cleveland Bay.\n\n\n\n\n\n\nFeb 15, 2022\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "projects/dt_maps_fish.html",
    "href": "projects/dt_maps_fish.html",
    "title": "Northern Three Spatial Analyses (Freshwater: Fish Sampling Sites)",
    "section": "",
    "text": "Introduction\nThis is a simple script to produce a map of sampling locations for the Fish indicator category in the Freshwater environment for the Dry Tropics region.\n\n\nScript Set Up\nBelow we load the required packages for the script.\n\n\nCode\nlibrary(sf) \nlibrary(tmap)\nlibrary(glue)\nlibrary(here)\nlibrary(tidyverse)\nlibrary(dataaimsr)\n\n\nThen set the coordinate reference system and save location.\n\n\nCode\n#set crs\nproj_crs <- params$project_crs\n\n#create a file path to help with saving things\nsave_path <- here(\"outputs/dt_maps_fish/\")\n\n#create a data path as well\ndata_path <- here(\"data/dt_maps_fish/\")\n\n#bring that path to life\ndir.create(here(save_path))\n\n#turn off S2 mapping\nsf_use_s2(FALSE)\n\n\n\n\nLoad Data\nOnce our work space is set up we then need to bring in data to create the maps. The background/location data is our usual basin/region outline, however the key data for this analysis is the breakdown of streams that are impounded or not impounded. This data is provided by David Moffatt.\n\n\nCode\n##please note if the data is not in the basin builder folder, try running the basin builder script\ndry_tropics <- st_read(here(\"data/n3_region-builder/n3_region.gpkg\")) |> st_transform(proj_crs) |> \n  filter(environment != \"Marine\", region == \"Dry Tropics\")\n\n#read in qld outlines data from the gisaimsr package, filter for land and islands, update crs\nqld <- get(data(\"gbr_feat\", package = \"gisaimsr\")) |> filter(FEAT_NAME %in% c(\"Mainland\", \"Island\")) |> \n  st_transform(proj_crs)\n\n#read in the main dataset\nfish_sample_sites <- st_read(glue(\"{data_path}/fish_monitoring_sites.gpkg\")) |> st_transform(proj_crs)\n\n#read in the impounded waters - we will use this for our streams\nimpounded_waters <- st_read(here(\"data/dt_maps_impoundment-length/impounded_and_not_impounded_waters.gpkg\")) |> st_transform(proj_crs)\n\n#create a townsville point coord\ntsv <- st_as_sf(data.frame(place = \"Townsville\", x = \"-19.2590\", y = \"146.8169\"), coords = c(\"y\", \"x\"), crs = proj_crs)\n\n\n\n\nMaipulate Data\nBefore we can create the map we just need to manipulate the data bit to remove unnecessary visual clutter.\n\n\nCode\n#rather than trying to move each site we will just do a randomized jitter and re run the script if it doesn't look good.\nlabels <- st_jitter(fish_sample_sites, 0.02)\n\n\n\n\nCreate Map\nAnd finally we can produce the required maps to be used in our technical report style.\n\n\nCode\n#create a map of the area\nmap <- tm_shape(qld) +\n  tm_polygons(col = \"grey80\", border.col = \"black\") +\n  tm_shape(dry_tropics) +\n  tm_polygons(border.col = \"black\") +\n  tm_shape(impounded_waters, is.master = T) +\n  tm_lines(lwd = 0.5, col = \"blue\", alpha = 0.5) +\n  tm_shape(fish_sample_sites, is.master = T) +\n  tm_symbols(shape = 21, border.col = \"Black\", col = \"short_name\", size = 0.5, palette = \"Set3\") +\n  tm_text(\"waterway\", size = 0.65, auto.placement = T, shadow = T) +\n  tm_shape(tsv) +\n  tm_symbols(size = 0.5, col = \"white\", border.col = \"black\", border.lwd = 2, shape = 23) +\n  tm_text(\"place\", shadow = T, xmod = -2.5, ymod = 0.1) +\n  tm_add_legend(type = \"line\", col = \"blue\", labels = \"Watercourses\")  +\n  tm_layout(legend.frame = T, legend.bg.color = \"White\", asp = 1.1, \n            legend.text.size = 0.7, legend.position = c(\"left\", \"bottom\")) +\n  tm_scale_bar(width = 0.15, text.size = 0.7, position = c(0.23, 0)) +\n  tm_compass(position = c(\"right\", \"top\"))\n\n#save the map as a png\n#tmap_save(map, filename = glue(\"{save_path}/fish-sampling-locations.png\"))\n\n\nScript complete :) Below is an interactive example of the maps created.\n\n\nCode\n#tmap_mode(\"view\")\n\nmap\n\n\n\n\n\n\n\nSession Info\nBelow is the session info at the time of rendering this script. Of greatest importance is to note the R version, and the “other attached packages” as these are the most significant drivers of success/failure. It is also good to check the “attached base packages” and “loaded via a namespace” packages as well. To check your session info use sessionInfo().\n\n\nCode\nsessionInfo()\n\n\nR version 4.3.1 (2023-06-16 ucrt)\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\nRunning under: Windows 10 x64 (build 19045)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_Australia.utf8  LC_CTYPE=English_Australia.utf8   \n[3] LC_MONETARY=English_Australia.utf8 LC_NUMERIC=C                      \n[5] LC_TIME=English_Australia.utf8    \n\ntime zone: Australia/Brisbane\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] dataaimsr_1.1.0 lubridate_1.9.2 forcats_1.0.0   stringr_1.5.0  \n [5] dplyr_1.1.3     purrr_1.0.2     readr_2.1.4     tidyr_1.3.0    \n [9] tibble_3.2.1    ggplot2_3.4.3   tidyverse_2.0.0 here_1.0.1     \n[13] glue_1.6.2      tmap_3.3-3      sf_1.0-14      \n\nloaded via a namespace (and not attached):\n [1] gtable_0.3.4        xfun_0.40           raster_3.6-23      \n [4] htmlwidgets_1.6.2   ggrepel_0.9.3       lattice_0.21-8     \n [7] tzdb_0.4.0          vctrs_0.6.3         tools_4.3.1        \n[10] crosstalk_1.2.0     generics_0.1.3      curl_5.0.2         \n[13] parallel_4.3.1      proxy_0.4-27        fansi_1.0.4        \n[16] pkgconfig_2.0.3     KernSmooth_2.23-21  RColorBrewer_1.1-3 \n[19] leaflet_2.2.0       lifecycle_1.0.3     compiler_4.3.1     \n[22] munsell_0.5.0       terra_1.7-39        codetools_0.2-19   \n[25] leafsync_0.1.0      stars_0.6-3         htmltools_0.5.6    \n[28] class_7.3-22        yaml_2.3.7          pillar_1.9.0       \n[31] classInt_0.4-9      lwgeom_0.2-13       abind_1.4-5        \n[34] tidyselect_1.2.0    digest_0.6.33       stringi_1.7.12     \n[37] rnaturalearth_0.3.4 rprojroot_2.0.3     fastmap_1.1.1      \n[40] grid_4.3.1          colorspace_2.1-0    cli_3.6.1          \n[43] magrittr_2.0.3      base64enc_0.1-3     dichromat_2.0-0.1  \n[46] XML_3.99-0.14       utf8_1.2.3          leafem_0.2.0       \n[49] e1071_1.7-13        withr_2.5.0         scales_1.2.1       \n[52] sp_2.0-0            timechange_0.2.0    httr_1.4.7         \n[55] rmarkdown_2.25      png_0.1-8           hms_1.1.3          \n[58] parsedate_1.3.1     evaluate_0.21       knitr_1.44         \n[61] tmaptools_3.1-1     viridisLite_0.4.2   rlang_1.1.1        \n[64] Rcpp_1.0.11         DBI_1.1.3           rstudioapi_0.15.0  \n[67] jsonlite_1.8.7      R6_2.5.1            units_0.8-3"
  },
  {
    "objectID": "projects/hydrology_and_hydrodynamics.html",
    "href": "projects/hydrology_and_hydrodynamics.html",
    "title": "StoryMap: Hydrology and Hydrodynamics of Cleveland Bay",
    "section": "",
    "text": "Rain comes in massive peaks and troughs, cyclones tear across the ocean, and winds and currents stir the coast into a swirling mix of salt, sand, and sediment. The  Hydrology and Hydrodynamics of Cleveland Bay  story explores, from the very beginnings, the journey of water across Cleveland Bay: where it comes from, where it goes, what it does, and how it does it. It explores the impact of humans on water, what impacts are yet to come, and how we can best prepare for the future."
  },
  {
    "objectID": "projects/guardians_of_the_bay.html",
    "href": "projects/guardians_of_the_bay.html",
    "title": "StoryMap: Guardians of the Bay",
    "section": "",
    "text": "Seagrass, small plants with a big impact. The  Guardians of the Bay  story explores how seagrass can stabilize the ocean floor, improve water quality, and protect our shores from erosion, it takes you on a journey under the ocean and into the flourishing world of seagrass in Cleveland Bay."
  },
  {
    "objectID": "portfolio/corals_of_cleveland.html",
    "href": "portfolio/corals_of_cleveland.html",
    "title": "StoryMap: Corals of Cleveland Bay",
    "section": "",
    "text": "To be released in March 1st 2024."
  },
  {
    "objectID": "portfolio/dt_fish_1.html",
    "href": "portfolio/dt_fish_1.html",
    "title": "title",
    "section": "",
    "text": "R Version\n\n\n\nFor R session info at the time of rendering this script see Section 6.\n\n\n\nIntroduction\nThis is a simple script to produce a map of sampling locations for the Fish indicator category in the Freshwater environment for the Dry Tropics region.\n\n\nScript Set Up\nBelow we load the required packages for the script.\n\n\nCode\nlibrary(sf) \nlibrary(tmap)\nlibrary(glue)\nlibrary(here)\nlibrary(tidyverse)\nlibrary(dataaimsr)\n\n\nThen set the coordinate reference system and save location.\n\n\nCode\n#set crs\n#proj_crs &lt;- params$project_crs\n\n#create a file path to help with saving things\n#save_path &lt;- here(\"outputs/dt_fish/\")\n\n#bring that path to life\n#dir.create(here(save_path))\n\n#turn off S2 mapping\nsf_use_s2(FALSE)\n\n\n\n\nLoad Data\nOnce our work space is set up we then need to bring in data to create the maps. The background/location data is our usual basin/region outline, however the key data for this analysis is the breakdown of streams that are impounded or not impounded. This data is provided by David Moffatt.\n\n\nCode\n##please note if the data is not in the basin builder folder, try running the basin builder script\n#dry_tropics &lt;- st_read(here(\"data/n3_region-builder/n3_region.gpkg\")) |&gt; st_transform(proj_crs) |&gt; \n  #filter(environment != \"Marine\", region == \"Dry Tropics\")\n\n#read in qld outlines data from the gisaimsr package, filter for land and islands, update crs\n#qld &lt;- get(data(\"gbr_feat\", package = \"gisaimsr\")) |&gt; filter(FEAT_NAME %in% c(\"Mainland\", \"Island\")) |&gt; \n  #st_transform(proj_crs)\n\n#read in the main dataset\n#fish_sample_sites &lt;- st_read(here(\"data/dt_fish/fish_monitoring_sites.gpkg\")) |&gt; st_transform(proj_crs)\n\n#read in the impounded waters - we will use this for our streams\n#impounded_waters &lt;- st_read(here(\"data/dt_impoundment-length/impounded_and_not_impounded_waters.gpkg\")) |&gt; st_transform(proj_crs)\n\n#create a townsville point coord\n#tsv &lt;- st_as_sf(data.frame(place = \"Townsville\", x = \"-19.2590\", y = \"146.8169\"), coords = c(\"y\", \"x\"), crs = proj_crs)\n\n\n\n\nMaipulate Data\nBefore we can create the map we just need to manipulate the data bit to remove unnecessary visual clutter.\n\n\nCode\n#rather than trying to move each site we will just do a randomized jitter and re run the script if it doesn't look good.\n#labels &lt;- st_jitter(fish_sample_sites, 0.02)\n\n\n\n\nCreate Map\nAnd finally we can produce the required maps to be used in our technical report style.\n\n\nCode\n#create a map of the area\n#map &lt;- tm_shape(qld) +\n  #tm_polygons(col = \"grey80\", border.col = \"black\") +\n  #tm_shape(dry_tropics) +\n  #tm_polygons(border.col = \"black\") +\n  #tm_shape(impounded_waters, is.master = T) +\n  #tm_lines(lwd = 0.5, col = \"blue\", alpha = 0.5) +\n  #tm_shape(fish_sample_sites, is.master = T) +\n  #tm_symbols(shape = 21, border.col = \"Black\", col = \"short_name\", size = 0.5, palette = \"Set3\") +\n  #tm_text(\"waterway\", size = 0.65, auto.placement = T, shadow = T) +\n  #tm_shape(tsv) +\n  #tm_symbols(size = 0.5, col = \"white\", border.col = \"black\", border.lwd = 2, shape = 23) +\n  #tm_text(\"place\", shadow = T, xmod = -2.5, ymod = 0.1) +\n  #tm_add_legend(type = \"line\", col = \"blue\", labels = \"Watercourses\")  +\n  #tm_layout(legend.frame = T, legend.bg.color = \"White\", asp = 1.1, \n  #          legend.text.size = 0.7, legend.position = c(\"left\", \"bottom\")) +\n  #tm_scale_bar(width = 0.15, text.size = 0.7, position = c(0.23, 0)) +\n  #tm_compass(position = c(\"right\", \"top\"))\n\n#save the map as a png\n#tmap_save(map, filename = glue(\"{save_path}/fish-sampling-locations.png\"))\n\n\nScript complete :) Below is an interactive example of the maps created.\n\n\nCode\n#tmap_mode(\"view\")\n\n#map\n\n\n\n\nSession Info\nBelow is the session info at the time of rendering this script. Of greatest importance is to note the R version, and the “other attached packages” as these are the most significant drivers of success/failure. It is also good to check the “attached base packages” and “loaded via a namespace” packages as well. To check your session info use sessionInfo().\n\n\nCode\nsessionInfo()\n\n\nR version 4.3.1 (2023-06-16 ucrt)\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\nRunning under: Windows 10 x64 (build 19045)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_Australia.utf8  LC_CTYPE=English_Australia.utf8   \n[3] LC_MONETARY=English_Australia.utf8 LC_NUMERIC=C                      \n[5] LC_TIME=English_Australia.utf8    \n\ntime zone: Australia/Brisbane\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] dataaimsr_1.1.0 lubridate_1.9.2 forcats_1.0.0   stringr_1.5.0  \n [5] dplyr_1.1.3     purrr_1.0.2     readr_2.1.4     tidyr_1.3.0    \n [9] tibble_3.2.1    ggplot2_3.4.3   tidyverse_2.0.0 here_1.0.1     \n[13] glue_1.6.2      tmap_3.3-3      sf_1.0-14      \n\nloaded via a namespace (and not attached):\n [1] gtable_0.3.4        xfun_0.40           raster_3.6-23      \n [4] htmlwidgets_1.6.2   ggrepel_0.9.3       lattice_0.21-8     \n [7] tzdb_0.4.0          vctrs_0.6.3         tools_4.3.1        \n[10] crosstalk_1.2.0     generics_0.1.3      curl_5.0.2         \n[13] parallel_4.3.1      proxy_0.4-27        fansi_1.0.4        \n[16] pkgconfig_2.0.3     KernSmooth_2.23-21  RColorBrewer_1.1-3 \n[19] leaflet_2.2.0       lifecycle_1.0.3     compiler_4.3.1     \n[22] munsell_0.5.0       terra_1.7-39        codetools_0.2-19   \n[25] leafsync_0.1.0      stars_0.6-3         htmltools_0.5.6    \n[28] class_7.3-22        yaml_2.3.7          pillar_1.9.0       \n[31] classInt_0.4-9      lwgeom_0.2-13       abind_1.4-5        \n[34] tidyselect_1.2.0    digest_0.6.33       stringi_1.7.12     \n[37] rnaturalearth_0.3.4 rprojroot_2.0.3     fastmap_1.1.1      \n[40] grid_4.3.1          colorspace_2.1-0    cli_3.6.1          \n[43] magrittr_2.0.3      base64enc_0.1-3     dichromat_2.0-0.1  \n[46] XML_3.99-0.14       utf8_1.2.3          leafem_0.2.0       \n[49] e1071_1.7-13        withr_2.5.0         scales_1.2.1       \n[52] sp_2.0-0            timechange_0.2.0    httr_1.4.7         \n[55] rmarkdown_2.25      png_0.1-8           hms_1.1.3          \n[58] parsedate_1.3.1     evaluate_0.21       knitr_1.44         \n[61] tmaptools_3.1-1     viridisLite_0.4.2   rlang_1.1.1        \n[64] Rcpp_1.0.11         DBI_1.1.3           rstudioapi_0.15.0  \n[67] jsonlite_1.8.7      R6_2.5.1            units_0.8-3"
  },
  {
    "objectID": "portfolio/dt_maps_fish.html",
    "href": "portfolio/dt_maps_fish.html",
    "title": "Northern Three Spatial Analyses (Freshwater: Fish Sampling Sites)",
    "section": "",
    "text": "R Version\n\n\n\nFor R session info at the time of rendering this script see Section 6.\n\n\n\nIntroduction\nThis is a simple script to produce a map of sampling locations for the Fish indicator category in the Freshwater environment for the Dry Tropics region.\n\n\nScript Set Up\nBelow we load the required packages for the script.\n\n\nCode\nlibrary(sf) \nlibrary(tmap)\nlibrary(glue)\nlibrary(here)\nlibrary(tidyverse)\nlibrary(dataaimsr)\n\n\nThen set the coordinate reference system and save location.\n\n\nCode\n#set crs\nproj_crs &lt;- params$project_crs\n\n#create a file path to help with saving things\nsave_path &lt;- here(\"outputs/dt_maps_fish/\")\n\n#create a data path as well\ndata_path &lt;- here(\"data/dt_maps_fish/\")\n\n#bring that path to life\ndir.create(here(save_path))\n\n#turn off S2 mapping\nsf_use_s2(FALSE)\n\n\n\n\nLoad Data\nOnce our work space is set up we then need to bring in data to create the maps. The background/location data is our usual basin/region outline, however the key data for this analysis is the breakdown of streams that are impounded or not impounded. This data is provided by David Moffatt.\n\n\nCode\n##please note if the data is not in the basin builder folder, try running the basin builder script\ndry_tropics &lt;- st_read(here(\"data/n3_region-builder/n3_region.gpkg\")) |&gt; st_transform(proj_crs) |&gt; \n  filter(environment != \"Marine\", region == \"Dry Tropics\")\n\n#read in qld outlines data from the gisaimsr package, filter for land and islands, update crs\nqld &lt;- get(data(\"gbr_feat\", package = \"gisaimsr\")) |&gt; filter(FEAT_NAME %in% c(\"Mainland\", \"Island\")) |&gt; \n  st_transform(proj_crs)\n\n#read in the main dataset\nfish_sample_sites &lt;- st_read(glue(\"{data_path}/fish_monitoring_sites.gpkg\")) |&gt; st_transform(proj_crs)\n\n#read in the impounded waters - we will use this for our streams\nimpounded_waters &lt;- st_read(here(\"data/dt_maps_impoundment-length/impounded_and_not_impounded_waters.gpkg\")) |&gt; st_transform(proj_crs)\n\n#create a townsville point coord\ntsv &lt;- st_as_sf(data.frame(place = \"Townsville\", x = \"-19.2590\", y = \"146.8169\"), coords = c(\"y\", \"x\"), crs = proj_crs)\n\n\n\n\nMaipulate Data\nBefore we can create the map we just need to manipulate the data bit to remove unnecessary visual clutter.\n\n\nCode\n#rather than trying to move each site we will just do a randomized jitter and re run the script if it doesn't look good.\nlabels &lt;- st_jitter(fish_sample_sites, 0.02)\n\n\n\n\nCreate Map\nAnd finally we can produce the required maps to be used in our technical report style.\n\n\nCode\n#create a map of the area\nmap &lt;- tm_shape(qld) +\n  tm_polygons(col = \"grey80\", border.col = \"black\") +\n  tm_shape(dry_tropics) +\n  tm_polygons(border.col = \"black\") +\n  tm_shape(impounded_waters, is.master = T) +\n  tm_lines(lwd = 0.5, col = \"blue\", alpha = 0.5) +\n  tm_shape(fish_sample_sites, is.master = T) +\n  tm_symbols(shape = 21, border.col = \"Black\", col = \"short_name\", size = 0.5, palette = \"Set3\") +\n  tm_text(\"waterway\", size = 0.65, auto.placement = T, shadow = T) +\n  tm_shape(tsv) +\n  tm_symbols(size = 0.5, col = \"white\", border.col = \"black\", border.lwd = 2, shape = 23) +\n  tm_text(\"place\", shadow = T, xmod = -2.5, ymod = 0.1) +\n  tm_add_legend(type = \"line\", col = \"blue\", labels = \"Watercourses\")  +\n  tm_layout(legend.frame = T, legend.bg.color = \"White\", asp = 1.1, \n            legend.text.size = 0.7, legend.position = c(\"left\", \"bottom\")) +\n  tm_scale_bar(width = 0.15, text.size = 0.7, position = c(0.23, 0)) +\n  tm_compass(position = c(\"right\", \"top\"))\n\n#save the map as a png\n#tmap_save(map, filename = glue(\"{save_path}/fish-sampling-locations.png\"))\n\n\nScript complete :) Below is an interactive example of the maps created.\n\n\nCode\n#tmap_mode(\"view\")\n\nmap\n\n\n\n\n\n\n\nSession Info\nBelow is the session info at the time of rendering this script. Of greatest importance is to note the R version, and the “other attached packages” as these are the most significant drivers of success/failure. It is also good to check the “attached base packages” and “loaded via a namespace” packages as well. To check your session info use sessionInfo().\n\n\nCode\nsessionInfo()\n\n\nR version 4.3.1 (2023-06-16 ucrt)\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\nRunning under: Windows 10 x64 (build 19045)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_Australia.utf8  LC_CTYPE=English_Australia.utf8   \n[3] LC_MONETARY=English_Australia.utf8 LC_NUMERIC=C                      \n[5] LC_TIME=English_Australia.utf8    \n\ntime zone: Australia/Brisbane\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] dataaimsr_1.1.0 lubridate_1.9.2 forcats_1.0.0   stringr_1.5.0  \n [5] dplyr_1.1.3     purrr_1.0.2     readr_2.1.4     tidyr_1.3.0    \n [9] tibble_3.2.1    ggplot2_3.4.3   tidyverse_2.0.0 here_1.0.1     \n[13] glue_1.6.2      tmap_3.3-3      sf_1.0-14      \n\nloaded via a namespace (and not attached):\n [1] gtable_0.3.4        xfun_0.40           raster_3.6-23      \n [4] htmlwidgets_1.6.2   ggrepel_0.9.3       lattice_0.21-8     \n [7] tzdb_0.4.0          vctrs_0.6.3         tools_4.3.1        \n[10] crosstalk_1.2.0     generics_0.1.3      curl_5.0.2         \n[13] parallel_4.3.1      proxy_0.4-27        fansi_1.0.4        \n[16] pkgconfig_2.0.3     KernSmooth_2.23-21  RColorBrewer_1.1-3 \n[19] leaflet_2.2.0       lifecycle_1.0.3     compiler_4.3.1     \n[22] munsell_0.5.0       terra_1.7-39        codetools_0.2-19   \n[25] leafsync_0.1.0      stars_0.6-3         htmltools_0.5.6    \n[28] class_7.3-22        yaml_2.3.7          pillar_1.9.0       \n[31] classInt_0.4-9      lwgeom_0.2-13       abind_1.4-5        \n[34] tidyselect_1.2.0    digest_0.6.33       stringi_1.7.12     \n[37] rnaturalearth_0.3.4 rprojroot_2.0.3     fastmap_1.1.1      \n[40] grid_4.3.1          colorspace_2.1-0    cli_3.6.1          \n[43] magrittr_2.0.3      base64enc_0.1-3     dichromat_2.0-0.1  \n[46] XML_3.99-0.14       utf8_1.2.3          leafem_0.2.0       \n[49] e1071_1.7-13        withr_2.5.0         scales_1.2.1       \n[52] sp_2.0-0            timechange_0.2.0    httr_1.4.7         \n[55] rmarkdown_2.25      png_0.1-8           hms_1.1.3          \n[58] parsedate_1.3.1     evaluate_0.21       knitr_1.44         \n[61] tmaptools_3.1-1     viridisLite_0.4.2   rlang_1.1.1        \n[64] Rcpp_1.0.11         DBI_1.1.3           rstudioapi_0.15.0  \n[67] jsonlite_1.8.7      R6_2.5.1            units_0.8-3"
  },
  {
    "objectID": "portfolio/guardians_of_the_bay.html",
    "href": "portfolio/guardians_of_the_bay.html",
    "title": "StoryMap: Guardians of the Bay",
    "section": "",
    "text": "Seagrass, small plants with a big impact. The  Guardians of the Bay  story explores how seagrass can stabilize the ocean floor, improve water quality, and protect our shores from erosion, it takes you on a journey under the ocean and into the flourishing world of seagrass in Cleveland Bay."
  },
  {
    "objectID": "portfolio/hydrology_and_hydrodynamics.html",
    "href": "portfolio/hydrology_and_hydrodynamics.html",
    "title": "StoryMap: Hydrology and Hydrodynamics of Cleveland Bay",
    "section": "",
    "text": "Rain comes in massive peaks and troughs, cyclones tear across the ocean, and winds and currents stir the coast into a swirling mix of salt, sand, and sediment. The  Hydrology and Hydrodynamics of Cleveland Bay story explores, from the very beginnings, the journey of water across Cleveland Bay: where it comes from, where it goes, what it does, and how it does it. It explores the impact of humans on water, what impacts are yet to come, and how we can best prepare for the future."
  },
  {
    "objectID": "portfolio/index.html",
    "href": "portfolio/index.html",
    "title": "Portfolio of Work",
    "section": "",
    "text": "Throughout my career in academia and government I have made my mark across a number of projects, working and publishing on topics such as artificial intelligence, environmental reports, geospatial stories, and automated data analysis. Below is a snapshot of some of this work.\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n\n\n\n\n  \n\n\n\n\nStoryMap: Corals of Cleveland Bay\n\n\nSupervisor, Author and Maintainer\n\n\nA story about the hidden coral world in Cleveland Bay.\n\n\n\n\n\n\n01 Mar, 2024\n\n\n\n\n\n\n  \n\n\n\n\nNorthern Three Spatial Analyses (Freshwater: Fish Sampling Sites)\n\n\nsub title\n\n\n\n\n\n\n\n\n\n26 Nov, 2023\n\n\nAdam Shand\n\n\n\n\n\n\n  \n\n\n\n\nStoryMap: Hydrology and Hydrodynamics of Cleveland Bay\n\n\nAuthor and Maintainer\n\n\nA story about water and sediment movement in Cleveland Bay.\n\n\n\n\n\n\n13 Nov, 2023\n\n\n\n\n\n\n  \n\n\n\n\nOut of the shadows: automatic fish detection from acoustic cameras\n\n\nCo-author\n\n\nEfficacious monitoring of fish stocks is critical for efficient management. Multibeam acoustic cameras, that use sound-…\n\n\n\n\n\n\n26 May, 2022\n\n\nAdam Shand\n\n\n\n\n\n\n  \n\n\n\n\nStoryMap: Guardians of the Bay\n\n\nMaintainer\n\n\nA story about the importance of seagrass in Cleveland Bay.\n\n\n\n\n\n\n15 Feb, 2022\n\n\n\n\n\n\n  \n\n\n\n\ntitle\n\n\nsub title\n\n\nabstract\n\n\n\n\n\n\n10 Feb, 2021\n\n\nAuthor\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "portfolio/out_of_the_shadows.html",
    "href": "portfolio/out_of_the_shadows.html",
    "title": "Out of the shadows: automatic fish detection from acoustic cameras",
    "section": "",
    "text": "Out of the shadows: automatic fish detection from acoustic cameras:  Efficacious monitoring of fish stocks is critical for efficient management. Multibeam acoustic cameras, that use sound-reflectance to generate moving pictures, provide an important alternative to traditional video-based methods that are inoperable in turbid waters. However, acoustic cameras, like standard video monitoring methods, produce large volumes of imagery from which it is time consuming and costly to extract data manually. Deep learning, a form of machine learning, can be used to automate the processing and analysis of acoustic data. We used convolutional neural networks (CNNs) to detect and count fish in a publicly available dual-frequency identification sonar (DIDSON) dataset. We compared three types of detections, direct acoustic, acoustic shadows, and a combination of direct and shadows. The deep learning model was highly reliable at detecting fish to obtain abundance data using acoustic data. Model accuracy for counts-per-image was improved by the inclusion of shadows (F1 scores, a measure of the model accuracy: direct 0.79, shadow 0.88, combined 0.90). Model accuracy for MaxN per video was high for all three types of detections (F1 scores: direct 0.90, shadow 0.90, combined 0.91). Our results demonstrate that CNNs are a powerful tool for automating underwater acoustic data analysis. Given this promise, we suggest broadening the scope of testing to include a wider range of fish shapes, sizes, and abundances, with a view to automating species (or ‘morphospecies’) identification and counts."
  },
  {
    "objectID": "photography/index.html",
    "href": "photography/index.html",
    "title": "Photography",
    "section": "",
    "text": "Rules for adding images:\n\nImage ratio must be 16:9.\nImage quality should be at least 1600 x 900 (note the lack of quality in lightbox).\nImages must be added in sets of 4 for the images to appear.\n\nalternatively, a negative space filler can be used in the layout to make “blank” images (see row 3).\n\nImages must have the same group to appear in the same lightbox.\n\nRow 1:\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\nRow 2:\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\nRow 3:"
  },
  {
    "objectID": "data/dt_maps_fish/note.html",
    "href": "data/dt_maps_fish/note.html",
    "title": "Adam Shand",
    "section": "",
    "text": "This is a placeholder to ensure the folder is uploaded to GitHub."
  },
  {
    "objectID": "data/dt_maps_impoundment-length/note.html",
    "href": "data/dt_maps_impoundment-length/note.html",
    "title": "Adam Shand",
    "section": "",
    "text": "This is a placeholder to ensure the folder is uploaded to GitHub."
  },
  {
    "objectID": "data/n3_region-builder/note.html",
    "href": "data/n3_region-builder/note.html",
    "title": "Adam Shand",
    "section": "",
    "text": "This is a placeholder to ensure the folder is uploaded to GitHub."
  },
  {
    "objectID": "photography/index.html#chilmark",
    "href": "photography/index.html#chilmark",
    "title": "Example Lightbox Document",
    "section": "",
    "text": "Here is a simple image with a description. This also overrides the description position and places it to the left of the image.\n\n\n\nBeach in Chilmark"
  },
  {
    "objectID": "photography/index.html#elsewhere",
    "href": "photography/index.html#elsewhere",
    "title": "Example Lightbox Document",
    "section": "Elsewhere",
    "text": "Elsewhere\nThe below demonstrates placing more than one image in a gallery. Note the usage of the layout-ncol which arranges the images on the page side by date. Adding the group attribute to the markdown images places the images in a gallery grouped together based upon the group name provided.\n\n\n\n\n\nAquinnah\n\n\n\n\n\nOak Bluffs\n\n\n\n\n\n\n\nVineyard lighthouse"
  },
  {
    "objectID": "photography/index.html#with-computation-code-chunks",
    "href": "photography/index.html#with-computation-code-chunks",
    "title": "Example Lightbox Document",
    "section": "With computation code chunks",
    "text": "With computation code chunks\nOptions for lightbox can be passed using chunk options.\n\n\nCode\nplot(1:10, rnorm(10))\n\n\n\n\n\nSimple demo R plot\n\n\n\n\n\n\nCode\nplot(cars)\n\n\n\n\n\nPlot about cars data\n\n\n\n\nIt is possible to create several plots, and group them in a lightbox gallery. Use list in YAML for options when you have several plots, on per plot.\n\n\nCode\nplot(mtcars)\n\n\n\n\n\nCaption for first plot\n\n\n\n\nCode\nplot(cars)\n\n\n\n\n\nCaption for second plot\n\n\n\n\nWhen lightbox: auto in main YAML config, you can opt-out lightbox on a plot by setting lightbox: false\n\n\nCode\nplot(mtcars)\n\n\n\n\n\nmtcars"
  },
  {
    "objectID": "photography/index.html#credits",
    "href": "photography/index.html#credits",
    "title": "Example Lightbox Document",
    "section": "Credits",
    "text": "Credits\nThe images in this example were used under the Unsplash license, view originals below:\n\nChilmark Beach\nAquinnah\nGingerbread House\nEdgartown Light\nEdgartown Sailboat"
  },
  {
    "objectID": "photography_hide/index.html",
    "href": "photography_hide/index.html",
    "title": "Photography",
    "section": "",
    "text": "Test page for imagery.\n\n\n\n\n\nAquinnah\n\n\n\n\n\nOak Bluffs\n\n\n\n\n\n\n\nVineyard lighthouse"
  }
]