{
  "hash": "941f770565da95bbe8e12fe53e2b8437",
  "result": {
    "markdown": "---\ntitle: \"Northern Three Spatial Analyses (Freshwater: Fish Sampling Sites)\"\nsubtitle: \"sub title\"\nauthor: \"Adam Shand\"\ndate: \"22, November, 2023\"\nformat: html\nparams:\n  project_crs: \"EPSG:7844\"\n---\n\n\n::: {.callout-tip}\n## R Version\nFor R session info at the time of rendering this script see @sec-sessioninfo.\n:::\n\n# Introduction\n\nThis is a simple script to produce a map of sampling locations for the Fish indicator category in the Freshwater environment for the Dry Tropics region.\n\n# Script Set Up\n\nBelow we load the required packages for the script.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sf) \nlibrary(tmap)\nlibrary(glue)\nlibrary(here)\nlibrary(tidyverse)\nlibrary(dataaimsr)\n```\n:::\n\n\nThen set the coordinate reference system and save location.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#set crs\nproj_crs <- params$project_crs\n\n#create a file path to help with saving things\nsave_path <- here(\"outputs/dt_maps_fish/\")\n\n#create a data path as well\ndata_path <- here(\"data/dt_maps_fish/\")\n\n#bring that path to life\ndir.create(here(save_path))\n\n#turn off S2 mapping\nsf_use_s2(FALSE)\n```\n:::\n\n\n# Load Data\n\nOnce our work space is set up we then need to bring in data  to create the maps. The background/location data is our usual basin/region outline, however the key data for this analysis is the breakdown of streams that are impounded or not impounded. This data is provided by David Moffatt.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n##please note if the data is not in the basin builder folder, try running the basin builder script\ndry_tropics <- st_read(here(\"data/n3_region-builder/n3_region.gpkg\")) |> st_transform(proj_crs) |> \n  filter(environment != \"Marine\", region == \"Dry Tropics\")\n\n#read in qld outlines data from the gisaimsr package, filter for land and islands, update crs\nqld <- get(data(\"gbr_feat\", package = \"gisaimsr\")) |> filter(FEAT_NAME %in% c(\"Mainland\", \"Island\")) |> \n  st_transform(proj_crs)\n\n#read in the main dataset\nfish_sample_sites <- st_read(glue(\"{data_path}/fish_monitoring_sites.gpkg\")) |> st_transform(proj_crs)\n\n#read in the impounded waters - we will use this for our streams\nimpounded_waters <- st_read(here(\"data/dt_maps_impoundment-length/impounded_and_not_impounded_waters.gpkg\")) |> st_transform(proj_crs)\n\n#create a townsville point coord\ntsv <- st_as_sf(data.frame(place = \"Townsville\", x = \"-19.2590\", y = \"146.8169\"), coords = c(\"y\", \"x\"), crs = proj_crs)\n```\n:::\n\n\n# Maipulate Data\n\nBefore we can create the map we just need to manipulate the data bit to remove unnecessary visual clutter.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#rather than trying to move each site we will just do a randomized jitter and re run the script if it doesn't look good.\nlabels <- st_jitter(fish_sample_sites, 0.02)\n```\n:::\n\n\n# Create Map\n\nAnd finally we can produce the required maps to be used in our technical report style.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#create a map of the area\nmap <- tm_shape(qld) +\n  tm_polygons(col = \"grey80\", border.col = \"black\") +\n  tm_shape(dry_tropics) +\n  tm_polygons(border.col = \"black\") +\n  tm_shape(impounded_waters, is.master = T) +\n  tm_lines(lwd = 0.5, col = \"blue\", alpha = 0.5) +\n  tm_shape(fish_sample_sites, is.master = T) +\n  tm_symbols(shape = 21, border.col = \"Black\", col = \"short_name\", size = 0.5, palette = \"Set3\") +\n  tm_text(\"waterway\", size = 0.65, auto.placement = T, shadow = T) +\n  tm_shape(tsv) +\n  tm_symbols(size = 0.5, col = \"white\", border.col = \"black\", border.lwd = 2, shape = 23) +\n  tm_text(\"place\", shadow = T, xmod = -2.5, ymod = 0.1) +\n  tm_add_legend(type = \"line\", col = \"blue\", labels = \"Watercourses\")  +\n  tm_layout(legend.frame = T, legend.bg.color = \"White\", asp = 1.1, \n            legend.text.size = 0.7, legend.position = c(\"left\", \"bottom\")) +\n  tm_scale_bar(width = 0.15, text.size = 0.7, position = c(0.23, 0)) +\n  tm_compass(position = c(\"right\", \"top\"))\n\n#save the map as a png\n#tmap_save(map, filename = glue(\"{save_path}/fish-sampling-locations.png\"))\n```\n:::\n\n\nScript complete :) Below is an interactive example of the maps created.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#tmap_mode(\"view\")\n\nmap\n```\n\n::: {.cell-output-display}\n![](dt_maps_fish_files/figure-html/interactive map example-1.png){width=672}\n:::\n:::\n\n\n# Session Info {#sec-sessioninfo}\n\nBelow is the session info at the time of rendering this script. Of greatest importance is to note the R version, and the \"other attached packages\" as these are the most significant drivers of success/failure. It is also good to check the \"attached base packages\" and \"loaded via a namespace\" packages as well. To check your session info use `sessionInfo()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.3.1 (2023-06-16 ucrt)\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\nRunning under: Windows 10 x64 (build 19045)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_Australia.utf8  LC_CTYPE=English_Australia.utf8   \n[3] LC_MONETARY=English_Australia.utf8 LC_NUMERIC=C                      \n[5] LC_TIME=English_Australia.utf8    \n\ntime zone: Australia/Brisbane\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] dataaimsr_1.1.0 lubridate_1.9.2 forcats_1.0.0   stringr_1.5.0  \n [5] dplyr_1.1.3     purrr_1.0.2     readr_2.1.4     tidyr_1.3.0    \n [9] tibble_3.2.1    ggplot2_3.4.3   tidyverse_2.0.0 here_1.0.1     \n[13] glue_1.6.2      tmap_3.3-3      sf_1.0-14      \n\nloaded via a namespace (and not attached):\n [1] gtable_0.3.4        xfun_0.40           raster_3.6-23      \n [4] htmlwidgets_1.6.2   ggrepel_0.9.3       lattice_0.21-8     \n [7] tzdb_0.4.0          vctrs_0.6.3         tools_4.3.1        \n[10] crosstalk_1.2.0     generics_0.1.3      curl_5.0.2         \n[13] parallel_4.3.1      proxy_0.4-27        fansi_1.0.4        \n[16] pkgconfig_2.0.3     KernSmooth_2.23-21  RColorBrewer_1.1-3 \n[19] leaflet_2.2.0       lifecycle_1.0.3     compiler_4.3.1     \n[22] munsell_0.5.0       terra_1.7-39        codetools_0.2-19   \n[25] leafsync_0.1.0      stars_0.6-3         htmltools_0.5.6    \n[28] class_7.3-22        yaml_2.3.7          pillar_1.9.0       \n[31] classInt_0.4-9      lwgeom_0.2-13       abind_1.4-5        \n[34] tidyselect_1.2.0    digest_0.6.33       stringi_1.7.12     \n[37] rnaturalearth_0.3.4 rprojroot_2.0.3     fastmap_1.1.1      \n[40] grid_4.3.1          colorspace_2.1-0    cli_3.6.1          \n[43] magrittr_2.0.3      base64enc_0.1-3     dichromat_2.0-0.1  \n[46] XML_3.99-0.14       utf8_1.2.3          leafem_0.2.0       \n[49] e1071_1.7-13        withr_2.5.0         scales_1.2.1       \n[52] sp_2.0-0            timechange_0.2.0    httr_1.4.7         \n[55] rmarkdown_2.25      png_0.1-8           hms_1.1.3          \n[58] parsedate_1.3.1     evaluate_0.21       knitr_1.44         \n[61] tmaptools_3.1-1     viridisLite_0.4.2   rlang_1.1.1        \n[64] Rcpp_1.0.11         DBI_1.1.3           rstudioapi_0.15.0  \n[67] jsonlite_1.8.7      R6_2.5.1            units_0.8-3        \n```\n:::\n:::\n",
    "supporting": [
      "dt_maps_fish_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}