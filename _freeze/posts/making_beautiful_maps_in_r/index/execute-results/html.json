{
  "hash": "46f3568e2016e8490fb054ee9bc946ff",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Making Beautiful Maps in R\"\ndate: \"01/04/2025\"\nabstract-title: \"ABSTRACT\"\nabstract: \"Creating maps using a programming language can be a painful process. The lack of a visual editor with realtime, crisp feedback makes stylistic changes and minute updates difficult. Further, R coders often find that the moment they have perfected the visuals of the map in the RStudio viewer, they realised that the saved version of the map has different proportions and sizes! In this blog I explore the R package 'tmap' and how it can be used to programmatically make beautiful, report ready maps, with as little stress as possible.\"\nimage: \"image.png\"\nformat: html\ntitle-block-banner: true #This is our banner\ninclude-after-body: \"../../html/html_footer.html\" #This is our footer\n---\n\n::: {.cell}\n\n:::\n\n\n\n\n# Introduction\n\nTBD\n\n# A Visually Appealing Map\n\nTBD\n\n## Prepare the Datasets\n\n### Background\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sf)\n\n#load in the background data\nbackground <- read_sf(\"Europe_coastline_poly.shp\")\n\n#change the crs of the background data to match our Netherlands dataset\nbackground <- st_transform(background, st_crs(NLD_prov))\n                      \n#create a single polygon of the province dataset\nNLD_prov_single <- st_union(NLD_prov)\n\n#remove any holes within the polygon then make the shape valid\nNLD_prov_single <- nngeo::st_remove_holes(NLD_prov_single) |> \n  st_make_valid()\n                      \n#take the full background dataset and cut a hole out of the same as the single polygon of the NLD_prov\nbackground_no_NLD <- st_difference(background, NLD_prov_single)\n\n#take the background with a hole in in, a crop it to a buffered bbox of the NLD_prov dataset (reduce file size)\nbackground_final <- st_intersection(background_no_NLD, st_as_sfc(st_bbox(st_buffer(NLD_prov_single, 20000))))\n```\n:::\n\n\n\n\n### France/World\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nworld_background <- World\n\nfrance_test <- world_background |> \n  filter(name == \"France\") |> \n  st_cast(\"POLYGON\") |> \n  mutate(ID = row_number())\n\n\ntm_shape(france_test) +\n  tm_polygons(fill = \"ID\",\n              fill.scale = tm_scale_categorical())\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\nfrance_test <- france_test |> \n  select(name, iso_a3)\n\n\nworld_no_france <- world_background |> \n  filter(name != \"France\") |> \n  select(name, iso_a3)\n\nworld_final <- rbind(world_no_france, france_test)\n```\n:::\n\n\n\n\n## Create the Inset Map\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(grid)\n\n#create a bounding box of the municipality dataset\nNLD_bbox <- st_as_sfc(st_bbox(NLD_muni))\n\n#create a much larger buffer of the municipality dataset to set the perspective of the map\nNLD_positioning <- st_as_sfc(st_bbox(st_buffer(NLD_muni, dist = 1000000)))\n\n#create the map that will be put into the viewport\ninset_map <- tm_shape(NLD_positioning, is.main = TRUE) +\n  tm_polygons(fill_alpha = 0,\n              col_alpha = 0) +\n  tm_shape(world_final) +\n  tm_polygons(fill = \"#99B5B1\") +\n  tm_text(text = \"iso_a3\",\n          size = 0.3,\n          options = opt_tm_text(shadow = T,\n                                shadow.offset.x = 0.01,\n                                shadow.offset.y = 0.01)) +\n  tm_shape(NLD_bbox) +\n  tm_borders(lwd = 2, \n             col = \"#8E3B46\") +\n  tm_layout(asp = 0,\n            bg.color = \"#C1DEEA\",\n            outer.bg.color = \"#F2F2F2\") \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ninset_map\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code}\ntmap_save(inset_map, \"inset_map.png\")\n```\n:::\n\n\n\n\n## Create the Main Map\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# install.packages(\"remotes\")\n#remotes::install_github(\"r-tmap/tmap\")\n\nprov_2 <- NLD_prov |> \n  mutate(UseMe = \"Province\")\n\ndist_2 <- NLD_dist |> \n  mutate(population = population+1)\n\nmuni_2 <- NLD_muni |> \n  mutate(UseMe = \"Municipality\")\n\n\nmap <- tm_shape(background_final) +\n  tm_polygons(fill = \"#99B5B1\") +\n  tm_shape(dist_2, is.main = T) +\n  tm_polygons(fill = \"population\",\n              fill.scale = tm_scale_continuous_log(values = c(\"#FFFFFF\", \"#00252A\"),\n                                                   ticks = c(1, 10000, 100000)),\n              fill.legend = tm_legend(title = \"Population\",\n                                      position = tm_pos_out(\"right\", \"center\"),\n                                      title.color = \"black\",\n                                      reverse = TRUE),\n              col_alpha = 0) +\n  tm_shape(muni_2) +\n  tm_borders(col = \"UseMe\",\n             col.scale = tm_scale_categorical(values = \"#e6aa04\"),\n             col.legend = tm_legend(title = \"\",\n                                    position = tm_pos_out(\"right\", \"center\"),\n                                    lwd = 2),\n             lwd = 1) +\n  tm_shape(prov_2) +\n  tm_borders(col = \"UseMe\", \n             col.scale = tm_scale_categorical(values = \"#8E3B46\"),\n             col.legend = tm_legend(title = \"\",\n                                    position = tm_pos_out(\"right\", \"center\")),\n             lwd = 2) +\n  tm_layout(bg.color = \"#C1DEEA\",\n            legend.bg.color = \"white\",\n            asp = 0,\n            outer.bg.color = \"#F2F2F2\") +\n  tm_credits(\"Credits Text\", \n             position = c(\"left\", \"bottom\")) +\n  tm_compass(type = \"rose\", \n             position = c(\"LEFT\", \"TOP\"),\n             color.dark = \"black\", \n             color.light = \"white\",\n             size = 3.5)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmap\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#figure out where to place the view port\ninset_viewport <- viewport(y = 0.015, x = 0.98, width = 0.33, height = 0.33, just = c(\"right\", \"bottom\"))\n\n#save map\ntmap_save(map, \"final_map.png\", insets_tm = inset_map, insets_vp = inset_viewport, height = 6, width = 8)\n```\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}